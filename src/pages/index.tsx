import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";

import { trpc } from "../utils/trpc";
const Home: NextPage = () => {
  console.log("hi");
  const {
    data: activeReferrals,
    isLoading,
    error,
  } = trpc.example.getAllActiveReferrals.useQuery();

  if (isLoading) {
    return <div>Loading...</div>;
  }

  if (error) {
    return <div>Error</div>;
  }
  const gridLayoutLg = activeReferrals.length > 6 ? "lg:grid-cols-3" : "";

  return (
    <>
      <Head>
        <title>Referral Lottery ↩️</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Referral <span className="text-[hsl(280,100%,70%)]">Lottery</span>
          </h1>
          <div className={`grid grid-cols-1 gap-4 md:gap-8 ${gridLayoutLg}`}>
            {activeReferrals
              .sort((a, b) => a.name.localeCompare(b.name))
              .map((referral) => (
                <Card
                  key={referral.id}
                  title={referral.name}
                  link={`/referrals/${referral.id}`}
                />
              ))}
          </div>
        </div>
      </main>
    </>
  );
};

const Card = ({
  link,
  title,
}: // description,
{
  link: string;
  title: string;
  // description: string;
}) => {
  return (
    <Link
      className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
      href={`${link}`}
    >
      <h3 className="text-2xl font-bold">{title} →</h3>
      {/* <div className="text-lg">{description}</div> */}
    </Link>
  );
};

export default Home;
